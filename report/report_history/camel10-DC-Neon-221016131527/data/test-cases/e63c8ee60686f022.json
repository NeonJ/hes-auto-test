{
  "uid" : "e63c8ee60686f022",
  "name" : "test_get_meter_status",
  "fullName" : "testCase.HESIntegration.Other_Interface.test_interface.Test_Meter_Status#test_get_meter_status",
  "historyId" : "2203135f6de08a396690796c37b3a6eb",
  "time" : {
    "start" : 1665897297126,
    "stop" : 1665897297253,
    "duration" : 127
  },
  "description" : "\n        验证接口获取电表状态字\n        ",
  "descriptionHtml" : "<pre><code>    验证接口获取电表状态字\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 500 == 200\n  +500\n  -200",
  "statusTrace" : "self = <test_interface.Test_Meter_Status object at 0x0000022D16C39B70>\ndevice = {'communication_type': 'GPRS', 'connect_type': 'Short', 'device_number': 2241031003, 'device_type': 'Meter', ...}, hesURL = 'http://54.179.93.135:32724'\n\n    @smokeTest\n    def test_get_meter_status(self,device,hesURL):\n        \"\"\"\n        验证接口获取电表状态字\n        \"\"\"\n        data = \"/Mdm/GetMeterStatus?MeterNo={}\".format(device['device_number'])\n        response, elapsed = HESRequest().get(url=hesURL + data, params=None)\n        print(response)\n>       assert response['code'] == 200\nE       assert 500 == 200\nE         +500\nE         -200\n\ntestCase\\HESIntegration\\Other_Interface\\test_interface.py:26: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "device",
    "time" : {
      "start" : 1665897290144,
      "stop" : 1665897290144,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1665897285924,
      "stop" : 1665897286028,
      "duration" : 104
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "slow_down_tests",
    "time" : {
      "start" : 1665897297126,
      "stop" : 1665897297126,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "nacosData",
    "time" : {
      "start" : 1665897286029,
      "stop" : 1665897290143,
      "duration" : 4114
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "hesURL",
    "time" : {
      "start" : 1665897297126,
      "stop" : 1665897297126,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "readConfig",
    "time" : {
      "start" : 1665897286028,
      "stop" : 1665897286029,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        验证接口获取电表状态字\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 500 == 200\n  +500\n  -200",
    "statusTrace" : "self = <test_interface.Test_Meter_Status object at 0x0000022D16C39B70>\ndevice = {'communication_type': 'GPRS', 'connect_type': 'Short', 'device_number': 2241031003, 'device_type': 'Meter', ...}, hesURL = 'http://54.179.93.135:32724'\n\n    @smokeTest\n    def test_get_meter_status(self,device,hesURL):\n        \"\"\"\n        验证接口获取电表状态字\n        \"\"\"\n        data = \"/Mdm/GetMeterStatus?MeterNo={}\".format(device['device_number'])\n        response, elapsed = HESRequest().get(url=hesURL + data, params=None)\n        print(response)\n>       assert response['code'] == 200\nE       assert 500 == 200\nE         +500\nE         -200\n\ntestCase\\HESIntegration\\Other_Interface\\test_interface.py:26: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6a9aabc1a25d5d4b",
      "name" : "stdout",
      "source" : "6a9aabc1a25d5d4b.txt",
      "type" : "text/plain",
      "size" : 240
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "slow_down_tests::0",
    "time" : {
      "start" : 1665897297259,
      "stop" : 1665897298261,
      "duration" : 1002
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "hesURL::0",
    "time" : {
      "start" : 1665897324203,
      "stop" : 1665897324203,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "smokeTest"
  }, {
    "name" : "parentSuite",
    "value" : "testCase.HESIntegration.Other_Interface"
  }, {
    "name" : "suite",
    "value" : "test_interface"
  }, {
    "name" : "subSuite",
    "value" : "Test_Meter_Status"
  }, {
    "name" : "host",
    "value" : "NeonPC"
  }, {
    "name" : "thread",
    "value" : "20028-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testCase.HESIntegration.Other_Interface.test_interface"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Total Defects",
      "matchedStatuses" : [ "failed" ],
      "flaky" : false
    } ],
    "tags" : [ "smokeTest" ]
  },
  "source" : "e63c8ee60686f022.json",
  "parameterValues" : [ ]
}