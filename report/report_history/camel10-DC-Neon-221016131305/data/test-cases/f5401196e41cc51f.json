{
  "uid" : "f5401196e41cc51f",
  "name" : "test_get_tariff_new_active",
  "fullName" : "testCase.HESIntegration.Tariff.test_get_meter_tariff_new.Test_Get_Meter_Tariff_New#test_get_tariff_new_active",
  "historyId" : "b2406162fb414ac8c0eaffac11a5487f",
  "time" : {
    "start" : 1665897179462,
    "stop" : 1665897179599,
    "duration" : 137
  },
  "description" : "\n        使用RequestMessage请求Active费率\n        ",
  "descriptionHtml" : "<pre><code>    使用RequestMessage请求Active费率\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 500 == 200\n  +500\n  -200",
  "statusTrace" : "self = <test_get_meter_tariff_new.Test_Get_Meter_Tariff_New object at 0x000002A30BEDDDA0>, caseData = <function caseData.<locals>.loadData at 0x000002A30BEEE620>\nrequestMessage = 'http://54.179.93.135:32724/api/v1/Request/RequestMessage'\ndevice = {'communication_type': 'GPRS', 'connect_type': 'Short', 'device_number': 2241031003, 'device_type': 'Meter', ...}\n\n    @smokeTest\n    def test_get_tariff_new_active(self, caseData, requestMessage, device):\n        \"\"\"\n        使用RequestMessage请求Active费率\n        \"\"\"\n        data = caseData('testData/Tariff/tariff.json')\n        requestData = data['get_tariff']['request']\n        requestData['payload'][0]['deviceNo'] = device['device_number']\n        requestData['payload'][0]['data'][0]['parameter']['tariffType'] = 1\n        transactionId = str(device['device_number']) + '_' + time.strftime('%y%m%d%H%M%S',time.localtime())\n        requestData['payload'][0]['transactionId'] = transactionId\n        response, elapsed = HESRequest().post(url=requestMessage, params=requestData)\n        print('Response --- ',response)\n>       assert response.get('reply')['replyCode'] == 200\nE       assert 500 == 200\nE         +500\nE         -200\n\ntestCase\\HESIntegration\\Tariff\\test_get_meter_tariff_new.py:40: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1665897143544,
      "stop" : 1665897143651,
      "duration" : 107
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "device",
    "time" : {
      "start" : 1665897147801,
      "stop" : 1665897147801,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "requestMessage",
    "time" : {
      "start" : 1665897147801,
      "stop" : 1665897147801,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "readConfig",
    "time" : {
      "start" : 1665897143651,
      "stop" : 1665897143652,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "caseData",
    "time" : {
      "start" : 1665897147801,
      "stop" : 1665897147801,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "nacosData",
    "time" : {
      "start" : 1665897143652,
      "stop" : 1665897147801,
      "duration" : 4149
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "slow_down_tests",
    "time" : {
      "start" : 1665897179461,
      "stop" : 1665897179461,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n        使用RequestMessage请求Active费率\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 500 == 200\n  +500\n  -200",
    "statusTrace" : "self = <test_get_meter_tariff_new.Test_Get_Meter_Tariff_New object at 0x000002A30BEDDDA0>, caseData = <function caseData.<locals>.loadData at 0x000002A30BEEE620>\nrequestMessage = 'http://54.179.93.135:32724/api/v1/Request/RequestMessage'\ndevice = {'communication_type': 'GPRS', 'connect_type': 'Short', 'device_number': 2241031003, 'device_type': 'Meter', ...}\n\n    @smokeTest\n    def test_get_tariff_new_active(self, caseData, requestMessage, device):\n        \"\"\"\n        使用RequestMessage请求Active费率\n        \"\"\"\n        data = caseData('testData/Tariff/tariff.json')\n        requestData = data['get_tariff']['request']\n        requestData['payload'][0]['deviceNo'] = device['device_number']\n        requestData['payload'][0]['data'][0]['parameter']['tariffType'] = 1\n        transactionId = str(device['device_number']) + '_' + time.strftime('%y%m%d%H%M%S',time.localtime())\n        requestData['payload'][0]['transactionId'] = transactionId\n        response, elapsed = HESRequest().post(url=requestMessage, params=requestData)\n        print('Response --- ',response)\n>       assert response.get('reply')['replyCode'] == 200\nE       assert 500 == 200\nE         +500\nE         -200\n\ntestCase\\HESIntegration\\Tariff\\test_get_meter_tariff_new.py:40: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "476aa5b8f9162ab5",
      "name" : "stdout",
      "source" : "476aa5b8f9162ab5.txt",
      "type" : "text/plain",
      "size" : 1141
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "requestMessage::0",
    "time" : {
      "start" : 1665897181776,
      "stop" : 1665897181777,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "slow_down_tests::0",
    "time" : {
      "start" : 1665897179605,
      "stop" : 1665897180610,
      "duration" : 1005
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "smokeTest"
  }, {
    "name" : "parentSuite",
    "value" : "testCase.HESIntegration.Tariff"
  }, {
    "name" : "suite",
    "value" : "test_get_meter_tariff_new"
  }, {
    "name" : "subSuite",
    "value" : "Test_Get_Meter_Tariff_New"
  }, {
    "name" : "host",
    "value" : "NeonPC"
  }, {
    "name" : "thread",
    "value" : "23776-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testCase.HESIntegration.Tariff.test_get_meter_tariff_new"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Total Defects",
      "matchedStatuses" : [ "failed" ],
      "flaky" : false
    } ],
    "tags" : [ "smokeTest" ]
  },
  "source" : "f5401196e41cc51f.json",
  "parameterValues" : [ ]
}