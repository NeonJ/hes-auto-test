{"name": "test_get_monthly_date", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_meter_monthly.Test_Meter_Monthly object at 0x0000022D16C27EB8>, caseData = <function caseData.<locals>.loadData at 0x0000022D1573F620>\nrequestMessage = 'http://54.179.93.135:32724/api/v1/Request/RequestMessage'\ndevice = {'communication_type': 'GPRS', 'connect_type': 'Short', 'device_number': 2241031003, 'device_type': 'Meter', ...}\nmonthly = {'entries': 3, 'entries_inuse_register_id': 'EOB Data Profile-7. entries_in_use', 'entries_register_id': 'EOB Data Profile-8. profile_entries', 'len': 0, ...}\n\n    @smokeTest\n    def test_get_monthly_date(self, caseData, requestMessage, device, monthly):\n        \"\"\"\n        使用同步读取的方式去对电表进行月结读取 - 按照Entry+Date方式进行并进行数据项对比\n         \"\"\"\n    \n        print(\"Step 1 : 获取当前电表第一条月结数据\")\n        data = caseData('testData/MeterFrozenData/meter_monthly_data.json')\n        requestData = data['meter_monthly_data']['request']\n        requestData['payload'][0]['deviceNo'] = device['device_number']\n        transactionId = str(device['device_number']) + '_' + time.strftime('%y%m%d%H%M%S',time.localtime())\n        requestData['payload'][0]['transactionId'] = transactionId\n        requestData['payload'][0]['data'][0]['registerId'] = monthly['register_id']\n        response, elapsed = HESRequest().post(url=requestMessage, params=requestData)\n        print('Response --- ', response)\n        if response.get('reply')['replyCode'] != 200:\n>           assert False\nE           assert False\n\ntestCase\\HESIntegration\\Monthly_Data_Check\\test_meter_monthly.py:49: AssertionError"}, "description": "\n        使用同步读取的方式去对电表进行月结读取 - 按照Entry+Date方式进行并进行数据项对比\n         ", "attachments": [{"name": "stdout", "source": "f2cd056c-dd02-41c8-a8e0-c3aec9c4a2cd-attachment.txt", "type": "text/plain"}], "start": 1665897295991, "stop": 1665897296111, "uuid": "b531ef59-d5b8-4e19-a638-ff23a8baca4d", "historyId": "7b3a42a67577e8d9d09efbb939cffad1", "testCaseId": "24f70f6956f2cc56b61d404468b8086f", "fullName": "testCase.HESIntegration.Monthly_Data_Check.test_meter_monthly.Test_Meter_Monthly#test_get_monthly_date", "labels": [{"name": "tag", "value": "smokeTest"}, {"name": "parentSuite", "value": "testCase.HESIntegration.Monthly_Data_Check"}, {"name": "suite", "value": "test_meter_monthly"}, {"name": "subSuite", "value": "Test_Meter_Monthly"}, {"name": "host", "value": "NeonPC"}, {"name": "thread", "value": "20028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.HESIntegration.Monthly_Data_Check.test_meter_monthly"}]}