{"name": "test_get_daily_entries", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200\n  +500\n  -200", "trace": "self = <test_meter_daily.Test_Meter_Daily object at 0x0000022D16BCFE80>, caseData = <function caseData.<locals>.loadData at 0x0000022D1573F620>\nrequestMessage = 'http://54.179.93.135:32724/api/v1/Request/RequestMessage'\ndevice = {'communication_type': 'GPRS', 'connect_type': 'Short', 'device_number': 2241031003, 'device_type': 'Meter', ...}\ndaily = {'entries': 3, 'entries_inuse_register_id': 'Daily billing-7. entries_in_use', 'entries_register_id': 'Daily billing-8. profile_entries', 'len': 45, ...}\n\n    @smokeTest\n    def test_get_daily_entries(self, caseData, requestMessage, device, daily):\n        \"\"\"\n        使用同步读取的方式去对电表进行日结entries数据对比\n        \"\"\"\n        data = caseData('testData/MeterFrozenData/meter_daily_data.json')\n        requestData = data['meter_daily_entries']['request']\n        requestData['payload'][0]['deviceNo'] = device['device_number']\n        transactionId = str(device['device_number']) + '_' + time.strftime('%y%m%d%H%M%S', time.localtime())\n        requestData['payload'][0]['transactionId'] = transactionId\n        requestData['payload'][0]['data'][0]['registerId'] = daily['entries_register_id']\n        response, elapsed = HESRequest().post(url=requestMessage, params=requestData)\n        print('Response --- ', response)\n>       assert response.get('reply')['replyCode'] == 200\nE       assert 500 == 200\nE         +500\nE         -200\n\ntestCase\\HESIntegration\\Daily_Data_Check\\test_meter_daily.py:46: AssertionError"}, "description": "\n        使用同步读取的方式去对电表进行日结entries数据对比\n        ", "attachments": [{"name": "log", "source": "5f7a863b-6c65-4042-bf32-331b71426bb6-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "cc55e3d7-f661-4c84-953e-7122e0244260-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "0d7fdfcb-2499-4d61-babd-8eeb35f3f1e9-attachment.txt", "type": "text/plain"}], "start": 1665897290146, "stop": 1665897290285, "uuid": "393adf17-acac-4004-9d85-d43219fbb7b5", "historyId": "6b1d173bf7bab57868defb043012d9a1", "testCaseId": "c3c411eae6fa38ae61fad730bc3e158b", "fullName": "testCase.HESIntegration.Daily_Data_Check.test_meter_daily.Test_Meter_Daily#test_get_daily_entries", "labels": [{"name": "tag", "value": "smokeTest"}, {"name": "parentSuite", "value": "testCase.HESIntegration.Daily_Data_Check"}, {"name": "suite", "value": "test_meter_daily"}, {"name": "subSuite", "value": "Test_Meter_Daily"}, {"name": "host", "value": "NeonPC"}, {"name": "thread", "value": "20028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.HESIntegration.Daily_Data_Check.test_meter_daily"}]}